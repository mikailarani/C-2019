//*********************PART1 out of 5*************************
//************************************************************
//
/*
#include <stdio.h>
int main()
{
  printf("%d", sizeof(long int));
return 0;
}
*/

//***************************************************
//
/*
#include <stdio.h>
#include <limits.h>

int main()
{
int var1 = INT_MIN;
int var2 = INT_MAX;

printf("range of signed integer is from: %d to %d", var1, var2);
return 0;

}
*/

//***************************************************
//
/*
#include <stdio.h>
#include <limits.h>

int main()
{
short int var1 = SHRT_MIN;
short int var2 = SHRT_MAX;
printf("range of short signed integer is from: %d to %d", var1, var2);
return 0;
}
*/

//***************************************************
//
/*
#include <stdio.h>
#include <limits.h>

int main()
{
short int var1 = 0;
short int var2 = USHRT_MAX;
printf("range of short unsigned integer is from: %u to %u", var1, var2);
return 0;
}
*/

//***************************************************
//
/*
#include <stdio.h>

int main()
{
int var = 429467298;
printf("%u", var);

}
*/

//***************************************************
//
/*
#include <stdio.h>
int main()
{
char var = -127;
printf("%c", var);
return 0;
}
*/

//***************************************************
//fundamental data type-float, doable & long double sample1
/*
#include <stdio.h>
 int main()
 {
 float var1 = 3.1415926535897932;
 double var2 = 3.1415926535897932;
 long double var3 = 3.141592653589793213456;

printf("%.16f\n", var1);
printf("%.16f\n", var2);
printf("%.21Lf\n", var3);
 }
 */

//***************************************************
//fundamental data type-float, doable & long double sample2
 /*
 #include <stdio.h>
 int main()
 {
 float var1 = 3.1415926535897932;
 double var2 = 3.1415926535897932;
 long double var3 = 3.141592653589793213456;

printf("%d\n", sizeof(float));
printf("%d\n", sizeof(double));
printf("%d\n", sizeof(long double));
printf("%.16f\n", var1);
printf("%.16f\n", var2);
printf("%.21Lf\n", var3);
 }
 */

//***************************************************
//fundamental data type-float, doable & long double
/*
#include <stdio.h>
 int main()
 {
 int var = 4/9;
printf("%d\n", var);

 float var1 = 4/9;
printf("%.2f\n", var1);

 float var2 = 4.0/9.0;
printf("%.2f\n", var2);
 }
*/

//***************************************************
// "%s" print string of characters ---"%d" format specifier print intiger
/*
#include <stdio.h>
int main(){
printf("%d", printf("%s", "Hello world!"));
return 0;
}
*/

//***************************************************
// "%d" format specifier print intiger- 255 is 8bits and max then we are exceeding the range. n here is 8 because we are exceeding the range therefore we calculate 265 mod raised to the raised power 8 is equal to 256. therefore it is 265 mod 256 which is equal to 9. when we divide 265by256 the riminder is 9
/*
int main(){
  char c = 255;
  c = c+10;
  printf("%d", c);
  return 0;
}
*/

//***************************************************
// 
/*
#include <stdio.h>
int main()
{
unsigned i=1;
int j=-4;
printf("%u", i+j);
return 0;
}
*/

//***************************************************
// print Robot on 5 seprate lines ***signed int i=int signed i= signed i ; unsigned i, long i, long int i, long long i***
/*
#include <stdio.h>
int main()
{
printf("%5s\n", "Robot");
printf("%10s\n", "Robot");
printf("%15s\n", "Robot");
printf("%20s\n", "Robot");
printf("%25s\n", "Robot");
return 0;
}
*/

//***************************************************
// int var; declaration and definition    extern int var; decleration
//ex. under similar project make 2  file under Sources ex. main.c and sensor.c
//in file main.c
/*
#include <stdio.h>
extern int a;
int main ()
{
  printf("%d", a);
  return 0;
}
//in file sensor.c
int a = 5;
*/

//***************************************************
//variable modification
//we make 2 program first main.c and then add.c
//main.c
/*
#include <stdio.h>
#include <stdlib.h>
extern int count;
int main()
{
  int value;
  value = increment();
  value = increment();
  value = increment();
  count = count + 3;
  value = count;
  printf("%d", value);
  return 0;
}
//add.c
static int count;
int increment()
{
  count = count + 1;
  return count;
}
*/

//***************************************************
//PI is 3.14159 then insted of typing full number I will type just the name "PI"
/*
#include <stdio.h>
#define PI 3.14159

int main(){
printf("%.5f", PI);
return 0;
}
*/

//***************************************************
/*
#include <stdio.h>
#define value 1889

int main ()
{
  printf("Year is %d\n", value);
  printf("Next year is %d\n", value+1);
  return 0;
}
*/

//***************************************************
/*
#include <stdio.h>
#define greater(x, y) if (x>= y)  \
printf("%d is greater than %d", x, y); \
else \
printf("%d is lesser than %d", x, y); 
int main()
{
greater (600, 600);
return 0;
}
*/

//***************************************************
/*
#include <stdio.h>
int main()
{
  printf("Date: %s\n", _DATE_);
  printf("Time: %s\n", _TIME_);
  return 0;
}
*/

//***************************************************
//when we put 0 front of each number it will be an octa value then it is 8^2*5 + 8^1*2=42
/*
int main()
{
int var = 052;
printf("%d", var);
return 0;
}
*/


